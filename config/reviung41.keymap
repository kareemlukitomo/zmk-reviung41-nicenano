// !!!!!!   Turkish Q Layout  !!!!!!

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/led/led.h>


// Layers
#define _QWERTY      0
#define _LOWER       1
#define _RAISE       2
#define _SPACE       3
#define _NAVIGATION  4
#define _ADJUST      5



&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <11>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};

// &caps_word {
//     continue-list = <UNDERSCORE MINUS>;
// };

/ {
  keymap {
    compatible = "zmk,keymap";

    // QWERTY LAYER (DEFAUT)
//       │  TAB │  Q   │  W   │  E   │  R   │  T   │            │  Y       │  U   │  I   │  O   │   P  │  GUI │
//       ├──────┼──────┼──────┼──────┼──────┼──────┤            ├──────────┼──────┼──────┼──────┼──────┼──────┤
//       │ CTRL │  A   │  S   │  D   │  F   │  G   │            │  H       │  J   │  K   │  L   │  ;   │  ' " │
//       ├──────┼──────┼──────┼──────┼──────┼──────┤            ├──────────┼──────┼──────┼──────┼──────┼──────┤
//       │SFT_CL│  Z   │  X   │  C   │  V   │  B   │            │  N       │  M   │  ,   │  .   │  /   │ ENT  │
//       ├──────┼──────┼──────┼──────┼──────┼──────┤            ├──────────┼──────┼──────┼──────┼──────┼──────┤
    //                               |_Lower| BSPC | _SPACE(ESC)|(ALT)SPACE|_Raise|
    //                               +-------------/            \--------------+
    default_layer {
    bindings = <
    &kp TAB       &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp RIGHT_GUI
    &kp LCTRL     &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
    &mt LSHFT ESC &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ENTER
                &mo _LOWER  &kp BSPC &lt _SPACE ESC  &mt LALT SPACE  &mo _RAISE
                    >;
            };
    // LOWER LAYER
    // ,---------------------------------------------------+         +------------------------------------------.
    // | GRAVE |       |       |         |       |         |         |  (   |   )  |   =  |   &  |   |  |       |
    // |-------+-------+-------+---------+-------+---------+         +------+------+------+------+------+-------|
    // |       |       |       |         |       |         |         |  {   |   }  |   _  |   $  |   #  |       |
    // |-------+-------+-------+---------+-------+---------+         +------+------+------+------+------+-------|
    // |       |       |       |         |       |         |         |  [   |   ]  |   <  |   >  |   \  |       |
    // |-------+-------+-------+---------+-------+---------+         +------+------+------+------+------+-------|
    //                                   | ____ |  DEL |      ENTER     | ____  |_ADJUST|
    //                                   +-------------/                \--------------+
    lower_layer {
    bindings = <
    &kp GRAVE &trans  &trans  &trans  &trans  &trans                &kp LPAR    &kp RPAR   &kp EQUAL  &kp AMPS &kp PIPE
    &trans    &trans  &trans  &trans  &trans  &trans                &kp LBRC    &kp RBRC   &kp UNDER  &kp DLLR &kp HASH
    &trans    &trans  &trans  &trans  &trans  &kp DEL               &kp LBKT    &kp RBKT   &kp LT     &kp GT   &kp BSLH
                               &trans      &trans       &kp RET      &trans    &mo _ADJUST
                    >;
            };

    // RAISE LAYER
    // ,-----------------------------------------------+         +------------------------------------------.
    // |  ESC  |   /  |   1   |    2   |   3   |   -   |         |  F1  |  F2  |  F3  |  F4  |      |       |
    // |-------+------+-------+--------+-------+-------+         +------+------+------+------+------+-------|
    // |       |   *  |   4   |    5   |   6   |   +   |         |  F5  |  F6  |  F7  |  F8  |      |       |
    // |-------+------+-------+--------+-------+-------+         +------+------+------+------+------+-------|
    // |       |   %  |   7   |    8   |   9   |   0   |         |  F9  |  F10 |  F11  | F12 |      |       |
    // |-------+------+-------+--------+-------+-------+         +------+------+------+------+------+-------|
    //                                 |_ADJUST| _____ |   BSPC  | ____ | ____ |
    //                                +-------------/              \--------------+
    raise_layer {
    bindings = <
    &kp ESC      &kp FSLH    &kp N1  &kp N2  &kp N3  &kp KP_MINUS        &kp F1  &kp F2    &kp F3   &kp F4   &trans   &trans
    &trans       &kp ASTRK   &kp N4  &kp N5  &kp N6  &kp KP_PLUS         &kp F5  &kp F6    &kp F7   &kp F8   &trans   &trans
    &trans       &kp PRCNT   &kp N7  &kp N8  &kp N9  &kp N0              &kp F9  &kp F10   &kp F11  &kp F12  &trans   &trans
                                &mo _ADJUST  &trans       &kp BSPC        &trans      &trans
                    >;
            };

    // SPACE LAYER
    // ,-------------------------------------------------- -+         +------------------------------------------.
    // |   ESC  |        |       |         |       |        |         |      |      |      |      |      |  DEL  |
    // |--------+--------+-------+---------+-------+--------+         +------+------+------+------+------+-------|
    // |        |        |       |         |       |LGUI+SPC|         | LEFT | DOWN |  UP  | RIGHT|      |       |
    // |--------+--------+-------+---------+-------+--------+         +------+------+------+------+------+-------|
    // |  _NAVI |        |       |         |       |        |         |      |      |      |      |      |       |
    // |--------+--------+-------+---------+-------+--------+         +------+------+------+------+------+-------|
    //                                     | ____ | ____ |     _______      | ____  | ____ |
    //                                     +-------------/                \--------------+

    space_layer {
    bindings = <
    &kp ESC        &trans  &trans  &trans  &trans  &trans            &trans   &trans   &trans  &trans     &trans  &kp DEL
    &trans         &trans  &trans  &trans  &trans  &LG(SPACE)        &kp LEFT &kp DOWN &kp UP  &kp RIGHT  &trans  &trans
    &_NAVIGATION   &trans  &trans  &trans  &trans  &trans            &trans   &trans   &trans  &trans     &trans  &trans
                                        &trans  &trans    &trans    &trans     &trans
                    >;
            };

    // NAVIGATION LAYER
    // ,-----------------------------------------------+         +------------------------------------------.
    // | MPLY  |       |       |       |       |       |         |C_NEXT| VLUP |      |      |      |       |
    // |-------+-------+-------+-------+-------+-------+         +------+------+------+------+------+-------|
    // |       |       |       |       |NAVI_T |       |         | HOME |PGDOWN| PGUP | END  |      |       |
    // |-------+-------+-------+-------+-------+-------+         +------+------+------+------+------+-------|
    // |       |       |       |       |       |       |         |C_PREV|VLDOWN|      |      |      |       |
    // |-------+-------+-------+-------+-------+-------+         +------+------+------+------+------+-------|
    //                               | ____ | ____ |                | ____  | ____ |
    //                               +-------------/                \--------------+

    navigation_layer {
    bindings = <
    &kp C_PLAY_PAUSE &trans  &trans  &trans  &trans  &trans            &kp C_NEXT  &kp C_VOL_UP  &trans     &trans        &trans        &trans
    &trans           &trans  &trans  &trans  &trans  &trans            &kp HOME    &kp PG_DN     &kp PG_UP  &kp END       &trans        &trans
    &trans           &trans  &trans  &trans  &trans  &trans            &kp C_PREV  &kp C_VOL_DN  &trans     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE
                                    &trans  &trans    &trans    &trans     &trans
                    >;
            };

    // ADJUST LAYER
    // ,-------------------------------------------------------- -+         +-----------------------------------------.
    // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |         |  BT1  | BT2 | BT3 | BT4 | BT5  | BT CLR |
    // |----------+----------+----------+----------+----+---------+         +--- ---+-----+-----+-----+------+-- -----|
    // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |         |       |     |     |EP_ON|EP_OFF| EP_TOG |
    // |----------+----------+----------+----------+----+---------+         +-------+-----+-----+-----+------+--------|
    // |          |          |          |          |    |         |         | RESET |BOOTL|     |O_USB|O_BLE |OUT_TOG |
    // |----------+----------+---------+-----------+----+---------+         +-------+-----+-----+-----+------+--------|
    //                                          | ____ | ____ |     _______      | ____  | ____ |
    //                                           +-------------/                \--------------+

    adjust_layer {
    bindings = <
    &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG              &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3       &bt BT_SEL 4        &bt BT_CLR
    &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none                        &none        &none         &none        &ext_power EP_ON   &ext_power EP_OFF   &ext_power EP_TOG
    &none           &none           &none           &none           &none &none                        &reset       &bootloader   &none        &out OUT_USB       &out OUT_BLE        &out OUT_TOG
                                                                  &trans      &trans       &trans        &trans      &trans
                    >;
            };
        };
};

